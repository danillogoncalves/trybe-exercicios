// ğŸš€ ExercÃ­cio 1: Inspecione um documento para que vocÃª se familiarize com a estrutura. Entenda os atributos e os nÃ­veis existentes.
use("class");
db.superheroes.find({})
db.superheroes.countDocuments({})

// ğŸš€ ExercÃ­cio 2: Selecione todos os super-herÃ³is com menos de 1.80m de altura. Lembre-se de que essa informaÃ§Ã£o estÃ¡ em centÃ­metros.
use("class");
db.superheroes.find({ "aspects.height": { $lt: 180 } }).pretty();

// ğŸš€ ExercÃ­cio 3: Retorne o total de super-herÃ³is menores que 1.80m.
use("class");
db.superheroes.countDocuments({ "aspects.height": { $lt: 180 } })

// ExercÃ­cio 4: Retorne o total de super-herÃ³is com atÃ© 1.80m.
db.superheroes.countDocuments({ "aspects.height": { $lte: 180 } })

// ExercÃ­cio 5: Selecione um super-herÃ³i com 2.00m ou mais de altura.
use("class");
db.superheroes.findOne({ "aspects.height": { $gte: 200 } });

// ExercÃ­cio 6: Retorne o total de super-herÃ³is com 2.00m ou mais.
use("class");
db.superheroes.countDocuments({ "aspects.height": { $gte: 200 } })

// ExercÃ­cio 7: Selecione todos os super-herÃ³is que tÃªm olhos verdes.
use("class");
db.superheroes.find({ "aspects.eyeColor": "green" })

// ExercÃ­cio 8: Retorne o total de super-herÃ³is com olhos azuis.
use("class");
db.superheroes.countDocuments({ "aspects.eyeColor": "blue" })

// ExercÃ­cio 9: Utilizando o operador $in, selecione todos os super-herÃ³is com cabelos pretos ou carecas ("No Hair").
use("class");
db.superheroes.find({ "aspects.hairColor": { $in: [ /^black$/i , /^no hair$/i] } })

// ExercÃ­cio 10: Retorne o total de super-herÃ³is com cabelos pretos ou carecas ("No Hair").
use("class");
db.superheroes.countDocuments({ "aspects.hairColor": { $in: [ /^black$/i , /^no hair$/i] } })

// ExercÃ­cio 11: Retorne o total de super-herÃ³is que nÃ£o tenham cabelos pretos ou nÃ£o sejam carecas.
use("class");
db.superheroes.countDocuments({ "aspects.hairColor": { $nin: [ /^black$/i , /^no hair$/i] } });

// ğŸš€ ExercÃ­cio 12: Utilizando o operador $not, retorne o total de super-herÃ³is que nÃ£o tenham mais de 1.80m de altura.
use("class");
db.superheroes.countDocuments({ "aspects.height": { $not: { $gt: 180 } } });

// ExercÃ­cio 13: Selecione todos os super-herÃ³is que nÃ£o sejam humanos nem sejam maiores do que 1.80m.
use("class");
db.superheroes.find({ $nor: [{ "race": /human/i }, { "aspects.height": { $gt: 180 } }]});

// ExercÃ­cio 14: Selecione todos os super-herÃ³is com 1.80m ou 2.00m de altura e que sejam publicados pela Marvel Comics.
use("class");
db.superheroes.find({ $and: [{ "publisher": /marvel comics/i }, { "aspects.height": { $in: [180, 200] }}]});

// ExercÃ­cio 15: Selecione todos os super-herÃ³is que pesem entre 80kg e 100kg, sejam Humanos ou Mutantes e nÃ£o sejam publicados pela DC Comics.
use("class");
db.superheroes.countDocuments({ $and: [{ "aspects.weight": { $gte: 80, $lte: 100 }, "race": { $in: [ /human/i, /mutant/i ]}, "publisher": { $not: /dc comics/i } }] });

// ExercÃ­cio 16: Retorne o total de documentos que nÃ£o contÃªm o campo race.
use("class");
db.superheroes.countDocuments({ "race": { $exists: false } });

// ExercÃ­cio 17: Retorne o total de documentos que contÃªm o campo hairColor.
use("class");
db.superheroes.countDocuments({ "aspects.hairColor": { $exists: true } });

// ExercÃ­cio 18: Remova apenas um documento publicado pela Sony Pictures.
use("class");
db.superheroes.deleteOne({ "publisher": /Sony Pictures/i });

// ğŸš€ ExercÃ­cio 19: Remova todos os documentos publicados pelo George Lucas.
use("class");
db.superheroes.deleteMany({ "publisher": /George Lucas/i });
