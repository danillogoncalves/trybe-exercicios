// Utilizando o operador $all, retorne todos os filmes que contenham action e adventure no array category.
use("cinema");
db.movies.find({
  category: { $all: [/action/i, /adventure/i] }
}).pretty();
// ðŸš€ Agora retorne os filmes que contenham action e sci-fi no array category e possuem nota do IMDB maior do que 7.
use("cinema");
db.movies.find({
  category: { $all: [/action/i, /sci-fi/i] },
  imdbRating: { $gt: 7 },
}).pretty();
// Retorne todos os filmes com ratings maior do que 103, exibindo apenas os campos title e ratings.
use("cinema");
db.movies.find(
  {ratings: { $elemMatch: { $gt: 103 } } },
  { title: 1, ratings: 1, _id: 0 }
).pretty();
// ðŸš€ Retorne todos os filmes com ratings entre 100 e 105, exibindo apenas os campos title e ratings.
use("cinema");
db.movies.find(
  { ratings: { $elemMatch: { $gte: 100, $lte: 105 } } },
  { title: 1, ratings: 1, _id: 0 },
).pretty();
// ðŸš€ Retorne todos os filmes com ratings entre 64 e 105 e divisÃ­veis por 9, exibindo apenas os campos title e ratings.
use("cinema");
db.movies.find(
  { ratings: { $elemMatch: { $gte: 64, $lte: 105, $mod: [9, 0] } } },
  { title: 1, ratings: 1, _id: 0 },
).pretty();
// Retorne os filmes da categoria adventure e com ratings maior do que 103, exibindo apenas os campos title, ratings e category.
use("cinema");
db.movies.find(
  {
    category: { $all: [/adventure/i] },
    ratings: { $elemMatch: { $gt: 103 } }
  },
  {
    title: 1,
    ratings: 1,
    category: 1,
    _id: 0
  },
).pretty();
// Retorne somente o tÃ­tulo de todos os filmes com dois elementos no array category.
use("cinema");
db.movies.find(
  { category: { $size: 2 } },
  { title: 1, _id: 0 },
).pretty();
// ðŸš€ Retorne somente o tÃ­tulo de todos os filmes com quatro elementos no array ratings.
use("cinema");
db.movies.find(
  { ratings: { $size: 4 } },
  { title: 1, _id: 0 },
).pretty();
// Busque os filmes em que o mÃ³dulo 5 do campo budget seja 0 e que o array category tenha tamanho 2.
use("cinema");
db.movies.find({
  budget: { $mod: [5, 0] },
  category: { $size: 2 },
}).pretty();
// ðŸš€ Retorne os filmes da categoria "sci-fi" ou que possua o ratings maior do que 199, exibindo apenas os campos title, ratings e category.
use("cinema");
db.movies.find(
  {
    $or: [
      { category: { $all: [/sci-fi/i] } },
      { ratings: { $elemMatch: { $gt: 199 } } },
    ],
  },
  {
    _id: 0,
    title: 1,
    ratings: 1,
    category: 1,
  },
).pretty();
// Retorne os filmes em que o ratings possua tamanho 4 e que seja da category "adventure" ou "family", mas que nÃ£o tenha o imdbRating menor que 7.
use("cinema");
db.movies.find({
  $and: [
    { ratings: { $size: 4 } },
    { category: { $in: [/adventure/i, /family/i] } },
    { imdbRating: { $not: { $lt: 7 } } },
]}).pretty();
// ðŸš€ Utilizando o operador $regex, retorne todos os filmes em que a descriÃ§Ã£o comece com a palavra "The".
use("cinema");
db.movies.find({
  description: { $regex: /^the/i },
}).pretty();
// Utilizando o operador $regex, retorne todos os filmes em que a descriÃ§Ã£o termine com a palavra "humanity.".
use("cinema");
db.movies.find({
  description: { $regex: /humanity.$/i },
}).pretty();
