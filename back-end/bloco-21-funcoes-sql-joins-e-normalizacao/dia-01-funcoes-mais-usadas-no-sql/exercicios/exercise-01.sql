-- 1. Escreva uma query que exiba o maior sal√°rio da tabela.
SELECT MAX(SALARY) FROM hr.employees;

-- 2. üöÄ Escreva uma query que exiba a diferen√ßa entre o maior e o menor sal√°rio.
SELECT MAX(SALARY) - MIN(SALARY) FROM hr.employees;

-- 3. üöÄ Escreva uma query que exiba a m√©dia salarial de cada JOB_ID, ordenando pela m√©dia salarial em ordem decrescente.
SELECT JOB_ID, AVG(SALARY) FROM hr.employees
GROUP BY JOB_ID
ORDER BY AVG(SALARY) DESC;

-- 4. Escreva uma query que exiba a quantidade de dinheiro necess√°ria para realizar o pagamento de todas as pessoas funcion√°rias.
SELECT SUM(IF (COMMISSION_PCT > 0, SALARY + (SALARY * COMMISSION_PCT), SALARY)) FROM hr.employees;
-- OU
SELECT SUM(`SALARY`) + SUM(`SALARY` * `COMMISSION_PCT`) FROM hr.employees; 

-- 5. üöÄ Escreva uma query que exiba quatro informa√ß√µes: o maior sal√°rio, o menor sal√°rio, a soma de todos os sal√°rios e a m√©dia dos sal√°rios. Todos os valores devem ser formatados para ter apenas duas casas decimais.
SELECT ROUND(MAX(SALARY),2), ROUND(MIN(SALARY),2), ROUND(SUM(SALARY),2), ROUND(AVG(SALARY),2) FROM hr.employees;

-- 6. Escreva uma query que exiba a quantidade de pessoas que trabalham como pessoas programadoras (IT_PROG).
SELECT JOB_ID, COUNT(*) FROM hr.employees
GROUP BY JOB_ID
HAVING JOB_ID = 'IT_PROG';

-- 7. Escreva uma query que exiba a quantidade de dinheiro necess√°ria para efetuar o pagamento de cada profiss√£o (JOB_ID).
SELECT JOB_ID, SUM(SALARY) + SUM(SALARY * COMMISSION_PCT) FROM hr.employees
GROUP BY JOB_ID;

-- 8. Utilizando a query anterior, fa√ßa as altera√ß√µes para que seja exibido somente a quantidade de dinheiro necess√°ria para cobrir a folha de pagamento das pessoas programadoras (IT_PROG).
SELECT JOB_ID, SUM(SALARY) + SUM(SALARY * COMMISSION_PCT) FROM hr.employees
GROUP BY JOB_ID
HAVING JOB_ID = 'IT_PROG';

-- 9. Escreva uma query que exiba em ordem decrescente a m√©dia salarial de todos os cargos, exceto das pessoas programadoras (IT_PROG).
SELECT JOB_ID, AVG(SALARY) FROM hr.employees
GROUP BY JOB_ID
HAVING JOB_ID <> 'IT_PROG'
ORDER BY AVG(SALARY) DESC;

-- 10. üöÄ Escreva um query que exiba m√©dia salarial e o n√∫mero de funcion√°rios de todos os departamentos com mais de dez funcion√°rios. Dica: agrupe pelo DEPARTMENT_ID.
SELECT DEPARTMENT_ID, AVG(SALARY), COUNT(EMPLOYEE_ID) FROM hr.employees
GROUP BY DEPARTMENT_ID
HAVING COUNT(EMPLOYEE_ID) > 10;

-- 11. üöÄ Escreva uma query que atualize a coluna PHONE_NUMBER, de modo que todos os telefones iniciados por 515 agora devem iniciar com 777.
SET SQL_SAFE_UPDATES = 0;

UPDATE hr.employees
SET PHONE_NUMBER = REPLACE(PHONE_NUMBER, '515', '777')
WHERE LEFT(PHONE_NUMBER, 3) = '515';
-- OU
WHERE PHONE_NUMBER LIKE '515%'

SET SQL_SAFE_UPDATES = 1;

-- 12. Escreva uma query que s√≥ exiba as informa√ß√µes dos funcion√°rios cujo o primeiro nome tenha oito ou mais caracteres.
SELECT * FROM hr.employees
WHERE CHAR_LENGTH(FIRST_NAME) >= 8;

-- 13. Escreva uma query que exiba as seguintes informa√ß√µes de cada funcion√°rio: id, primeiro nome e ano no qual foi contratado (exiba somente o ano).
SELECT
EMPLOYEE_ID,
FIRST_NAME,
YEAR(HIRE_DATE)
FROM hr.employees;

-- 14. üöÄ Escreva uma query que exiba as seguintes informa√ß√µes de cada funcion√°rio: id, primeiro nome e dia do m√™s no qual foi contratado (exiba somente o dia).
SELECT
EMPLOYEE_ID,
FIRST_NAME,
DAY(HIRE_DATE)
FROM hr.employees;

-- 15. Escreva uma query que exiba as seguintes informa√ß√µes de cada funcion√°rio: id, primeiro nome e m√™s no qual foi contratado (exiba somente o m√™s).
SELECT
EMPLOYEE_ID,
FIRST_NAME,
MONTH(HIRE_DATE)
FROM hr.employees;

-- 16. Escreva uma query que exiba os nomes dos funcion√°rios em letra mai√∫scula.
SELECT UCASE(FIRST_NAME) FROM hr.employees;

-- 17: Escreva uma query que exiba o sobrenome e a data de contrata√ß√£o de todos os funcion√°rio contratados em julho de 1987.
SELECT LAST_NAME, HIRE_DATE FROM hr.employees
WHERE HIRE_DATE BETWEEN '1987-07-01' AND '1987-07-31';
-- ou
SELECT LAST_NAME, HIRE_DATE
FROM hr.employees
WHERE MONTH(HIRE_DATE)=7 and YEAR(HIRE_DATE)=1987;

-- 18: üöÄ Escreva uma query que exiba as seguintes informa√ß√µes de cada funcion√°rio: nome, sobrenome, tempo que trabalha na empresa (em dias).
SELECT FIRST_NAME, LAST_NAME, DATEDIFF(CURRENT_DATE(), HIRE_DATE) FROM hr.employees;
-- ou
SELECT `FIRST_NAME`, `LAST_NAME`, ABS(DATEDIFF(`HIRE_DATE`, NOW())) FROM hr.employees; 
